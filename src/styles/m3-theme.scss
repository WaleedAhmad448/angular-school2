// This file was generated by running 'ng generate @angular/material:m3-theme'.
// Proceed with caution if making changes to this file.

@use 'sass:map';
@use '@angular/material' as mat;

$primary: 210deg;
$secondary: 85deg;
$tertiary: 50deg;
$error: 0deg;

// Note: Color palettes are generated from primary: #3c82c3, secondary: #96cc33, tertiary: #ccb033, neutral: #808080
$palettes: (
  primary: (
    0: hsl($primary, 0%, 0%),
    10: hsl($primary, 100%, 10%),
    20: hsl($primary, 100%, 17%),
    25: hsl($primary, 100%, 21%),
    30: hsl($primary, 100%, 24%),
    35: hsl($primary, 100%, 28%),
    40: hsl($primary, 100%, 32%),
    50: hsl($primary, 60%, 46%),
    60: hsl($primary, 64%, 58%),
    70: hsl($primary, 88%, 69%),
    80: hsl($primary, 100%, 81%),
    90: hsl($primary, 100%, 91%),
    95: hsl($primary, 100%, 96%),
    98: hsl($primary, 100%, 99%),
    99: hsl($primary, 100%, 99%),
    100: hsl($primary, 0%, 100%),
  ),
  secondary: (
    0: hsl($secondary, 0%, 0%),
    10: hsl($secondary, 100%, 6%),
    20: hsl($secondary, 100%, 11%),
    25: hsl($secondary, 100%, 13%),
    30: hsl($secondary, 100%, 15%),
    35: hsl($secondary, 100%, 18%),
    40: hsl($secondary, 100%, 20%),
    50: hsl($secondary, 100%, 26%),
    60: hsl($secondary, 100%, 31%),
    70: hsl($secondary, 70%, 43%),
    80: hsl($secondary, 66%, 54%),
    90: hsl($secondary, 88%, 65%),
    95: hsl($secondary, 100%, 78%),
    98: hsl($secondary, 100%, 91%),
    99: hsl($secondary, 100%, 95%),
    100: hsl($secondary, 0%, 100%),
  ),
  tertiary: (
    0: hsl($tertiary, 0%, 0%),
    10: hsl($tertiary, 100%, 7%),
    20: hsl($tertiary, 100%, 11%),
    25: hsl($tertiary, 100%, 14%),
    30: hsl($tertiary, 100%, 16%),
    35: hsl($tertiary, 100%, 19%),
    40: hsl($tertiary, 100%, 22%),
    50: hsl($tertiary, 100%, 27%),
    60: hsl($tertiary, 88%, 35%),
    70: hsl($tertiary, 63%, 47%),
    80: hsl($tertiary, 73%, 58%),
    90: hsl($tertiary, 100%, 70%),
    95: hsl($tertiary, 100%, 88%),
    98: hsl($tertiary, 100%, 97%),
    99: hsl($tertiary, 100%, 99%),
    100: hsl($tertiary, 0%, 100%),
  ),
  neutral: (
    0: hsl($primary, 0%, 0%),
    4: hsl($primary, 0%, 4%),
    6: hsl($primary, 0%, 6%),
    10: hsl($primary, 0%, 10%),
    12: hsl($primary, 0%, 12%),
    17: hsl($primary, 0%, 17%),
    20: hsl($primary, 0%, 20%),
    22: hsl($primary, 0%, 22%),
    24: hsl($primary, 0%, 24%),
    25: hsl($primary, 0%, 25%),
    30: hsl($primary, 0%, 30%),
    35: hsl($primary, 0%, 35%),
    40: hsl($primary, 0%, 40%),
    50: hsl($primary, 0%, 50%),
    60: hsl($primary, 0%, 60%),
    70: hsl($primary, 0%, 70%),
    80: hsl($primary, 0%, 80%),
    87: hsl($primary, 0%, 87%),
    90: hsl($primary, 0%, 90%),
    92: hsl($primary, 0%, 92%),
    94: hsl($primary, 0%, 94%),
    95: hsl($primary, 0%, 95%),
    96: hsl($primary, 0%, 96%),
    98: hsl($primary, 0%, 98%),
    99: hsl($primary, 0%, 99%),
    100: hsl($primary, 0%, 100%),
  ),
  neutral-variant: (
    0: hsl($primary, 20%, 0%),
    10: hsl($primary, 20%, 10%),
    20: hsl($primary, 20%, 20%),
    25: hsl($primary, 20%, 25%),
    30: hsl($primary, 20%, 30%),
    35: hsl($primary, 20%, 35%),
    40: hsl($primary, 20%, 40%),
    50: hsl($primary, 20%, 50%),
    60: hsl($primary, 20%, 60%),
    70: hsl($primary, 20%, 70%),
    80: hsl($primary, 20%, 80%),
    90: hsl($primary, 20%, 90%),
    95: hsl($primary, 20%, 95%),
    98: hsl($primary, 20%, 98%),
    99: hsl($primary, 20%, 99%),
    100: hsl($primary, 20%, 100%),
  ),
  error: (
    0: hsl($error, 0%, 0%),
    10: hsl($error, 100%, 13%),
    20: hsl($error, 100%, 21%),
    25: hsl($error, 100%, 25%),
    30: hsl($error, 100%, 29%),
    35: hsl($error, 92%, 34%),
    40: hsl($error, 75%, 42%),
    50: hsl($error, 73%, 53%),
    60: hsl($error, 100%, 64%),
    70: hsl($error, 100%, 75%),
    80: hsl($error, 100%, 84%),
    90: hsl($error, 100%, 92%),
    95: hsl($error, 100%, 96%),
    98: hsl($error, 100%, 98%),
    99: hsl($error, 100%, 99%),
    100: hsl($error, 0%, 100%),
  ),
);

$rest: (
  secondary: map.get($palettes, secondary),
  neutral: map.get($palettes, neutral),
  neutral-variant: map.get($palettes, neutral-variant),
  error: map.get($palettes, error),
);
$primary: map.merge(map.get($palettes, primary), $rest);
$tertiary: map.merge(map.get($palettes, tertiary), $rest);

$light-theme: mat.define-theme(
  (
    color: (
      theme-type: light,
      primary: $primary,
      tertiary: $tertiary,
    ),
  )
);

$dark-theme: mat.define-theme(
  (
    color: (
      theme-type: dark,
      primary: $primary,
      tertiary: $tertiary,
    ),
  )
);
